Inspecting 115 files
CCCCCCCCCCCCCCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCWCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:74:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem aws-sdk-s3 should appear before tzinfo-data.
gem "aws-sdk-s3", require: false
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:74:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "aws-sdk-s3", require: false
    ^^^^^^^^^^^^
Gemfile:75:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "ransack", "~> 2.6"
    ^^^^^^^^^
Gemfile:75:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "ransack", "~> 2.6"
               ^^^^^^^^
Gemfile:76:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem brakeman should appear before ransack.
gem "brakeman"
^^^^^^^^^^^^^^
Gemfile:76:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "brakeman"
    ^^^^^^^^^^
Gemfile:76:15: C: [Correctable] Layout/TrailingEmptyLines: Final newline missing.
gem "brakeman"
              
Rakefile:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/channel.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/channels/application_cable/connection.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/omniauth_callbacks_controller.rb:4:3: C: Style/Documentation: Missing top-level documentation comment for class Admins::OmniauthCallbacksController.
  class OmniauthCallbacksController < Devise::OmniauthCallbacksController
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/sessions_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins/sessions_controller.rb:4:3: C: Style/Documentation: Missing top-level documentation comment for class Admins::SessionsController.
  class SessionsController < Devise::SessionsController
  ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CoursesController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CoursesController.
class CoursesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/courses_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CoursesController < ApplicationController
^
app/controllers/dashboards_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/dashboards_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class DashboardsController.
class DashboardsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class FavoritesController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class FavoritesController.
class FavoritesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class FavoritesController < ApplicationController
^
app/controllers/favorites_controller.rb:2:41: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_favorite, only: %i[ show edit update destroy ]
                                        ^
app/controllers/favorites_controller.rb:2:66: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
  before_action :set_favorite, only: %i[ show edit update destroy ]
                                                                 ^
app/controllers/favorites_controller.rb:10:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def show ...
  ^^^^^^^^
app/controllers/favorites_controller.rb:19:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def edit ...
  ^^^^^^^^
app/controllers/favorites_controller.rb:28:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to favorite_url(@favorite), notice: "Favorite was successfully created." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:41:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        format.html { redirect_to favorite_url(@favorite), notice: "Favorite was successfully updated." }
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:55:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      format.html { redirect_to favorites_url, notice: "Favorite was successfully destroyed." }
                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:60:3: C: [Correctable] Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/favorites_controller.rb:62:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def set_favorite
^^^^
app/controllers/favorites_controller.rb:62:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def set_favorite ...
    ^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:67:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def favorite_params
^^^^
app/controllers/favorites_controller.rb:67:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    def favorite_params ...
    ^^^^^^^^^^^^^^^^^^^
app/controllers/favorites_controller.rb:68:121: C: [Correctable] Layout/LineLength: Line is too long. [161/120]
      params.require(:favorite).permit(:lastname, :firstname, :uin, :email, :classname, :notes, :major, :finalgrade, :updatedgrade, :recletter, :semester, :year)
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/images_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class ImagesController < ApplicationController ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/images_controller.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class ImagesController.
class ImagesController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^
app/controllers/images_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class ImagesController < ApplicationController
^
app/controllers/students_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
app/controllers/students_controller.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
# frozen_string_literal: true
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:4:1: C: Style/Documentation: Missing top-level documentation comment for class StudentsController.
class StudentsController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:9:3: C: Metrics/AbcSize: Assignment Branch Condition size for index is too high. [<6, 26, 9> 28.16/17]
  def index ...
  ^^^^^^^^^
app/controllers/students_controller.rb:9:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def index ...
  ^^^^^^^^^
app/controllers/students_controller.rb:22:5: C: Style/GuardClause: Use a guard clause (return unless params[:search_by_recletter] && params[:search_by_recletter] != '') instead of wrapping the code inside a conditional expression.
    if params[:search_by_recletter] && params[:search_by_recletter] != ''
    ^^
app/controllers/students_controller.rb:31:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:37:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:42:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:46:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def create ...
  ^^^^^^^^^^
app/controllers/students_controller.rb:47:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:63:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:77:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:79:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/students_controller.rb:87:5: C: Naming/VariableName: Use snake_case for variable names.
    @Images = Image.all
    ^^^^^^^
app/controllers/students_controller.rb:88:5: C: Naming/VariableName: Use snake_case for variable names.
    @Courses = Course.all
    ^^^^^^^^
app/controllers/students_controller.rb:89:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #begin
    ^^^^^^
app/controllers/students_controller.rb:92:5: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 4 instead of 6).
    #rescue
    ^^^^^^^
app/controllers/students_controller.rb:92:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #rescue
    ^^^^^^^
app/controllers/students_controller.rb:93:7: C: [Correctable] Layout/CommentIndentation: Incorrect indentation detected (column 6 instead of 4).
      #redirect_to students_path, notice: "No file added"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:93:7: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
      #redirect_to students_path, notice: "No file added"
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:94:5: C: [Correctable] Layout/LeadingCommentSpace: Missing space after #.
    #end
    ^^^^
app/controllers/students_controller.rb:96:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/controllers/students_controller.rb:97:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def help ...
  ^^^^^^^^
app/controllers/students_controller.rb:100:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
  def upload ...
  ^^^^^^^^^^
app/controllers/students_controller.rb:103:3: C: Metrics/AbcSize: Assignment Branch Condition size for favor is too high. [<0, 27, 0> 27/17]
  def favor ...
  ^^^^^^^^^
app/controllers/students_controller.rb:104:121: C: [Correctable] Layout/LineLength: Line is too long. [236/120]
    Student.favor(params[:lastname], params[:firstname], params[:uin], params[:email], params[:classname], params[:notes], params[:major], params[:finalgrade], params[:updatedgrade], params[:recletter], params[:semester], params[:year])
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/students_controller.rb:121:1: C: [Correctable] Layout/TrailingEmptyLines: 1 trailing blank lines detected.
app/controllers/users_controller.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class UsersController.
class UsersController < ApplicationController
^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/application_helper.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for module ApplicationHelper.
module ApplicationHelper
^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/courses_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module CoursesHelper ...
^^^^^^^^^^^^^^^^^^^^
app/helpers/courses_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module CoursesHelper.
module CoursesHelper
^^^^^^^^^^^^^^^^^^^^
app/helpers/courses_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module CoursesHelper
^
app/helpers/favorites_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module FavoritesHelper ...
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/favorites_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module FavoritesHelper.
module FavoritesHelper
^^^^^^^^^^^^^^^^^^^^^^
app/helpers/favorites_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module FavoritesHelper
^
app/helpers/images_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
module ImagesHelper ...
^^^^^^^^^^^^^^^^^^^
app/helpers/images_helper.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for module ImagesHelper.
module ImagesHelper
^^^^^^^^^^^^^^^^^^^
app/helpers/images_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
module ImagesHelper
^
app/helpers/students_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/students_helper.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for module StudentsHelper.
module StudentsHelper
^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for module UsersHelper.
module UsersHelper
^^^^^^^^^^^^^^^^^^
app/jobs/application_job.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/mailers/application_mailer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/admin.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class Admin.
class Admin < ApplicationRecord
^^^^^^^^^^^
app/models/application_record.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/application_record.rb:5:1: C: Style/Documentation: Missing top-level documentation comment for class ApplicationRecord.
class ApplicationRecord < ActiveRecord::Base
^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Course < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/course.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Course < ApplicationRecord
^
app/models/favorite.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Favorite < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/favorite.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Favorite < ApplicationRecord
^
app/models/favorite.rb:2:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    has_many :student
^^^^
app/models/favorite.rb:3:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :email, presence: true
^^^^
app/models/favorite.rb:4:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :firstname, presence: true
^^^^
app/models/favorite.rb:5:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :lastname, presence: true
^^^^
app/models/favorite.rb:6:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :notes, presence: true
^^^^
app/models/favorite.rb:7:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :uin, presence: true
^^^^
app/models/favorite.rb:8:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :finalgrade, presence: true
^^^^
app/models/favorite.rb:9:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :updatedgrade, presence: true
^^^^
app/models/favorite.rb:10:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :classname, presence: true
^^^^
app/models/favorite.rb:11:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :recletter, presence: true
^^^^
app/models/favorite.rb:12:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :semester, presence: true
^^^^
app/models/favorite.rb:13:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    validates :year, presence: true
^^^^
app/models/image.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class Image < ApplicationRecord ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/image.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class Image < ApplicationRecord
^
app/models/student.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class Student.
class Student < ApplicationRecord
^^^^^^^^^^^^^
app/models/student.rb:19:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/student.rb:21:3: C: Metrics/AbcSize: Assignment Branch Condition size for import is too high. [<25, 45, 10> 52.44/17]
  def self.import(file, year, semester, files, classn) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:21:3: C: Metrics/MethodLength: Method has too many lines. [38/10]
  def self.import(file, year, semester, files, classn) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:21:41: W: [Correctable] Lint/UnusedMethodArgument: Unused method argument - files. If it's necessary, use _ or _files as an argument name to indicate that it won't be used.
  def self.import(file, year, semester, files, classn)
                                        ^^^^^
app/models/student.rb:37:5: C: [Correctable] Style/NegatedIf: Favor unless over if for negative conditions.
    if not(check) ...
    ^^^^^^^^^^^^^
app/models/student.rb:37:8: C: [Correctable] Style/Not: Use ! instead of not.
    if not(check)
       ^^^
app/models/student.rb:71:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/student.rb:72:3: C: Metrics/AbcSize: Assignment Branch Condition size for favor is too high. [<13, 18, 2> 22.29/17]
  def self.favor(lastname, firstname, uin, email, classname, notes, major, finalgrade, updatedgrade, recletter, semester, year) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:72:3: C: Metrics/MethodLength: Method has too many lines. [16/10]
  def self.favor(lastname, firstname, uin, email, classname, notes, major, finalgrade, updatedgrade, recletter, semester, year) ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:72:17: C: Metrics/ParameterLists: Avoid parameter lists longer than 5 parameters. [12/5]
  def self.favor(lastname, firstname, uin, email, classname, notes, major, finalgrade, updatedgrade, recletter, semester, year)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/student.rb:72:121: C: Layout/LineLength: Line is too long. [127/120]
  def self.favor(lastname, firstname, uin, email, classname, notes, major, finalgrade, updatedgrade, recletter, semester, year)
                                                                                                                        ^^^^^^^
app/models/student.rb:73:5: C: Style/GuardClause: Use a guard clause (return unless Favorite.all.where(uin: uin).find_each.count < 1) instead of wrapping the code inside a conditional expression.
    if Favorite.all.where(uin: uin).find_each.count < 1
    ^^
app/models/student.rb:75:30: C: [Correctable] Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      favorite_hash.lastname =  lastname
                             ^
app/models/student.rb:75:31: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      favorite_hash.lastname =  lastname
                              ^
app/models/student.rb:76:31: C: [Correctable] Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      favorite_hash.firstname =  firstname
                              ^
app/models/student.rb:76:32: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      favorite_hash.firstname =  firstname
                               ^
app/models/student.rb:80:27: C: [Correctable] Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      favorite_hash.notes =  notes
                          ^
app/models/student.rb:80:28: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      favorite_hash.notes =  notes
                           ^
app/models/student.rb:82:32: C: [Correctable] Layout/SpaceAroundOperators: Operator = should be surrounded by a single space.
      favorite_hash.finalgrade =  finalgrade
                               ^
app/models/student.rb:82:33: C: [Correctable] Layout/ExtraSpacing: Unnecessary spacing detected.
      favorite_hash.finalgrade =  finalgrade
                                ^
app/models/student.rb:90:1: C: [Correctable] Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/user.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/courses/_course.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! course, :id, :classname, :semester, :year, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/courses/_course.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! course, :id, :classname, :semester, :year, :created_at, :updated_at
^
app/views/courses/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @courses, partial: 'courses/course', as: :course ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/courses/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @courses, partial: 'courses/course', as: :course
^
app/views/courses/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! 'courses/course', course: @course ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/courses/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! 'courses/course', course: @course
^
app/views/favorites/_favorite.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! favorite, :id, :lastname, :firstname, :uin, :email, :classname, :notes, :major, :finalgrade, :updatedgrade, :recletter, :semester, :year, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/favorites/_favorite.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! favorite, :id, :lastname, :firstname, :uin, :email, :classname, :notes, :major, :finalgrade, :updatedgrade, :recletter, :semester, :year, :created_at, :updated_at
^
app/views/favorites/_favorite.json.jbuilder:1:121: C: [Correctable] Layout/LineLength: Line is too long. [176/120]
json.extract! favorite, :id, :lastname, :firstname, :uin, :email, :classname, :notes, :major, :finalgrade, :updatedgrade, :recletter, :semester, :year, :created_at, :updated_at
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/favorites/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @favorites, partial: "favorites/favorite", as: :favorite ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/favorites/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @favorites, partial: "favorites/favorite", as: :favorite
^
app/views/favorites/index.json.jbuilder:1:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.array! @favorites, partial: "favorites/favorite", as: :favorite
                                 ^^^^^^^^^^^^^^^^^^^^
app/views/favorites/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! "favorites/favorite", favorite: @favorite ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/favorites/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! "favorites/favorite", favorite: @favorite
^
app/views/favorites/show.json.jbuilder:1:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "favorites/favorite", favorite: @favorite
              ^^^^^^^^^^^^^^^^^^^^
app/views/images/_image.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.extract! image, :id, :uin, :photo, :created_at, :updated_at ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/images/_image.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.extract! image, :id, :uin, :photo, :created_at, :updated_at
^
app/views/images/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.array! @images, partial: 'images/image', as: :image ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/images/index.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.array! @images, partial: 'images/image', as: :image
^
app/views/images/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
json.partial! 'images/image', image: @image ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/images/show.json.jbuilder:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
json.partial! 'images/image', image: @image
^
app/views/students/_student.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/students/index.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/views/students/show.json.jbuilder:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/bundle:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/CyclomaticComplexity: Cyclomatic complexity for cli_arg_version is too high. [9/7]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/MethodLength: Method has too many lines. [11/10]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:24:3: C: Metrics/PerceivedComplexity: Perceived complexity for cli_arg_version is too high. [9/8]
  def cli_arg_version ...
  ^^^^^^^^^^^^^^^^^^^
bin/bundle:91:3: C: Metrics/MethodLength: Method has too many lines. [12/10]
  def activate_bundler ...
  ^^^^^^^^^^^^^^^^^^^^
bin/bundle:104:121: C: Layout/LineLength: Line is too long. [198/120]
    warn "Activating bundler (#{bundler_requirement}) failed:\n#{gem_error.message}\n\nTo install the version of bundler this project requires, run `gem install bundler -v '#{bundler_requirement}'`"
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/rails:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/rake:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/setup:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/spring:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/webpack:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/webpack:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/webpack_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/webpack-dev-server:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
#!/usr/bin/env ruby
^
bin/webpack-dev-server:3:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
    ^^^^^^^^^^^
bin/webpack-dev-server:3:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                         ^^^^^^^^^^
bin/webpack-dev-server:3:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["RAILS_ENV"] ||= ENV["RACK_ENV"] || "development"
                                        ^^^^^^^^^^^^^
bin/webpack-dev-server:4:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
    ^^^^^^^^^^
bin/webpack-dev-server:4:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["NODE_ENV"]  ||= "development"
                     ^^^^^^^^^^^^^
bin/webpack-dev-server:6:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "pathname"
        ^^^^^^^^^^
bin/webpack-dev-server:7:5: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
    ^^^^^^^^^^^^^^^^
bin/webpack-dev-server:7:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           ^^^^^^^^^^^^^^^
bin/webpack-dev-server:8:3: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
  Pathname.new(__FILE__).realpath)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:10:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "bundler/setup"
        ^^^^^^^^^^^^^^^
bin/webpack-dev-server:12:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker"
        ^^^^^^^^^^^
bin/webpack-dev-server:13:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "webpacker/dev_server_runner"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/webpack-dev-server:15:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
APP_ROOT = File.expand_path("..", __dir__)
                            ^^^^
bin/yarn:1:1: C: Layout/EndOfLine: Carriage return character detected.
#!/usr/bin/env ruby ...
^^^^^^^^^^^^^^^^^^^
config.ru:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:12:3: C: Style/Documentation: Missing top-level documentation comment for class RecommendationTracker::Application.
  class Application < Rails::Application
  ^^^^^^^^^^^^^^^^^
config/boot.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environment.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/application_controller_renderer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/content_security_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/cookies_serializer.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:17:121: C: Layout/LineLength: Line is too long. [154/120]
  # config.secret_key = '1666e804370b977b593f2be3a7a9d2921971a2698502fcc7b317b45af753b3ab3d82c76bd63f838117e99899535d54f0d237893ba3dff89834985f02046bc518'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:131:121: C: Layout/LineLength: Line is too long. [150/120]
  # config.pepper = '03d0d5fc8967d5b059b68817fda06ffcb4afe28d74e520b04b04b73ea666a0c971ef97d4d57a03d43cdb53e9524c09dda4710a82ded95535d92a728071bb65d3'
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/filter_parameter_logging.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/inflections.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/mime_types.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/permissions_policy.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/wrap_parameters.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/puma.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [28/25]
Rails.application.routes.draw do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/routes.rb:4:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:25:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:26:25: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  resources :students do 
                        ^
config/routes.rb:30:24: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  resource :students do 
                       ^
config/routes.rb:36:23: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  resources :images do 
                      ^
config/routes.rb:39:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
config/spring.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220208205701_create_users.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220208205701_create_users.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class CreateUsers.
class CreateUsers < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class CreateStudents.
class CreateStudents < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:6:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "email"
               ^^^^^^^
db/migrate/20220210182024_create_students.rb:7:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "firstname"
               ^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:8:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "lastname"
               ^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:9:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "fullname"
               ^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:10:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.text "notes"
             ^^^^^^^
db/migrate/20220210182024_create_students.rb:11:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "uin"
               ^^^^^
db/migrate/20220210182024_create_students.rb:12:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "major"
               ^^^^^^^
db/migrate/20220210182024_create_students.rb:13:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "finalgrade"
               ^^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:14:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "updatedgrade"
               ^^^^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "classname"
               ^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:16:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "recletter"
               ^^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:17:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.text "reason"
             ^^^^^^^^
db/migrate/20220210182024_create_students.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string "semester"
               ^^^^^^^^^^
db/migrate/20220210182024_create_students.rb:19:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.integer "year"
                ^^^^^^
db/migrate/20220211193712_devise_create_admins.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220211193712_devise_create_admins.rb:3:1: C: Style/Documentation: Missing top-level documentation comment for class DeviseCreateAdmins.
class DeviseCreateAdmins < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# This migration comes from active_storage (originally 20170806125915) ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This migration comes from active_storage (originally 20170806125915)
^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/AbcSize: Assignment Branch Condition size for change is too high. [<3, 22, 0> 22.2/17]
  def change ...
  ^^^^^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:3:3: C: Metrics/MethodLength: Method has too many lines. [25/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:14:16: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :key ], unique: true
               ^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:14:21: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :key ], unique: true
                    ^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:24:15: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:24:16: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
               ^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:24:58: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                         ^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:24:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:24:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                                                                        ^^^^^^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:32:18: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
      t.index %i[ blob_id variation_digest ], name: "index_active_storage_variant_records_uniqueness", unique: true
                 ^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:32:43: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
      t.index %i[ blob_id variation_digest ], name: "index_active_storage_variant_records_uniqueness", unique: true
                                          ^
db/migrate/20220306002749_create_active_storage_tables.active_storage.rb:32:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index %i[ blob_id variation_digest ], name: "index_active_storage_variant_records_uniqueness", unique: true
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306230019_create_images.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateImages < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220306230019_create_images.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateImages.
class CreateImages < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^
db/migrate/20220306230019_create_images.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateImages < ActiveRecord::Migration[6.1]
^
db/migrate/20220331145942_create_courses.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateCourses < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220331145942_create_courses.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateCourses.
class CreateCourses < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^
db/migrate/20220331145942_create_courses.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateCourses < ActiveRecord::Migration[6.1]
^
db/migrate/20220406211900_create_favorites.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
class CreateFavorites < ActiveRecord::Migration[6.1] ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220406211900_create_favorites.rb:1:1: C: Style/Documentation: Missing top-level documentation comment for class CreateFavorites.
class CreateFavorites < ActiveRecord::Migration[6.1]
^^^^^^^^^^^^^^^^^^^^^
db/migrate/20220406211900_create_favorites.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
class CreateFavorites < ActiveRecord::Migration[6.1]
^
db/migrate/20220406211900_create_favorites.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [15/10]
  def change ...
  ^^^^^^^^^^
db/schema.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [90/25]
ActiveRecord::Schema.define(version: 2022_04_06_211900) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:13:38: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema.define(version: 2022_04_06_211900) do
                                     ^^^^^^^^^^^^^^^^^
db/schema.rb:14:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
db/schema.rb:16:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  enable_extension "plpgsql"
                   ^^^^^^^^^
db/schema.rb:18:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_attachments", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:19:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name", null: false
             ^^^^^^
db/schema.rb:20:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "record_type", null: false
             ^^^^^^^^^^^^^
db/schema.rb:21:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "record_id", null: false
             ^^^^^^^^^^^
db/schema.rb:22:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "blob_id", null: false
             ^^^^^^^^^
db/schema.rb:23:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:24:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
             ^^^^^^^^^
db/schema.rb:24:32: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:25:13: C: [Correctable] Style/WordArray: Use %w or %W for an array of words.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:25:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
             ^^^^^^^^^^^^^
db/schema.rb:25:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                            ^^^^^^^^^^^
db/schema.rb:25:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                         ^^^^^^
db/schema.rb:25:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                 ^^^^^^^^^
db/schema.rb:25:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:25:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                                                                        ^^^^^^
db/schema.rb:28:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_blobs", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:29:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "key", null: false
             ^^^^^
db/schema.rb:30:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "filename", null: false
             ^^^^^^^^^^
db/schema.rb:31:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "content_type"
             ^^^^^^^^^^^^^^
db/schema.rb:32:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "metadata"
           ^^^^^^^^^^
db/schema.rb:33:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "service_name", null: false
             ^^^^^^^^^^^^^^
db/schema.rb:34:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "byte_size", null: false
             ^^^^^^^^^^^
db/schema.rb:35:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "checksum", null: false
             ^^^^^^^^^^
db/schema.rb:36:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:37:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
             ^^^^^
db/schema.rb:37:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:40:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_variant_records", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:41:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "blob_id", null: false
             ^^^^^^^^^
db/schema.rb:42:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "variation_digest", null: false
             ^^^^^^^^^^^^^^^^^^
db/schema.rb:43:13: C: [Correctable] Style/WordArray: Use %w or %W for an array of words.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:43:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
             ^^^^^^^^^
db/schema.rb:43:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
                        ^^^^^^^^^^^^^^^^^^
db/schema.rb:43:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:46:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "admins", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:47:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email", null: false
             ^^^^^^^
db/schema.rb:48:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "full_name"
             ^^^^^^^^^^^
db/schema.rb:49:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "uid"
             ^^^^^
db/schema.rb:50:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "avatar_url"
             ^^^^^^^^^^^^
db/schema.rb:51:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:52:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:53:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_admins_on_email", unique: true
             ^^^^^^^
db/schema.rb:53:30: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_admins_on_email", unique: true
                             ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:56:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "courses", force: :cascade do |t|
               ^^^^^^^^^
db/schema.rb:57:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "classname"
             ^^^^^^^^^^^
db/schema.rb:58:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "semester"
             ^^^^^^^^^^
db/schema.rb:59:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "year"
             ^^^^^^
db/schema.rb:60:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:61:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:64:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "favorites", force: :cascade do |t|
               ^^^^^^^^^^^
db/schema.rb:65:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "lastname"
             ^^^^^^^^^^
db/schema.rb:66:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "firstname"
             ^^^^^^^^^^^
db/schema.rb:67:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "uin"
             ^^^^^
db/schema.rb:68:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:69:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "classname"
             ^^^^^^^^^^^
db/schema.rb:70:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "notes"
             ^^^^^^^
db/schema.rb:71:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "major"
             ^^^^^^^
db/schema.rb:72:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "finalgrade"
             ^^^^^^^^^^^^
db/schema.rb:73:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "updatedgrade"
             ^^^^^^^^^^^^^^
db/schema.rb:74:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "recletter"
             ^^^^^^^^^^^
db/schema.rb:75:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "semester"
             ^^^^^^^^^^
db/schema.rb:76:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "year"
             ^^^^^^
db/schema.rb:77:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:78:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:81:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "images", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:82:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "uin"
             ^^^^^
db/schema.rb:83:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "photo"
             ^^^^^^^
db/schema.rb:84:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:85:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:88:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "students", force: :cascade do |t|
               ^^^^^^^^^^
db/schema.rb:89:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "firstname"
             ^^^^^^^^^^^
db/schema.rb:91:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "lastname"
             ^^^^^^^^^^
db/schema.rb:92:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "fullname"
             ^^^^^^^^^^
db/schema.rb:93:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "notes"
           ^^^^^^^
db/schema.rb:94:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "uin"
             ^^^^^
db/schema.rb:95:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "major"
             ^^^^^^^
db/schema.rb:96:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "finalgrade"
             ^^^^^^^^^^^^
db/schema.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "updatedgrade"
             ^^^^^^^^^^^^^^
db/schema.rb:98:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "classname"
             ^^^^^^^^^^^
db/schema.rb:99:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "recletter"
             ^^^^^^^^^^^
db/schema.rb:100:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "reason"
           ^^^^^^^^
db/schema.rb:101:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "semester"
             ^^^^^^^^^^
db/schema.rb:102:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "year"
              ^^^^^^
db/schema.rb:103:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:104:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:107:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: :cascade do |t|
               ^^^^^^^
db/schema.rb:108:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email"
             ^^^^^^^
db/schema.rb:109:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "password"
             ^^^^^^^^^^
db/schema.rb:110:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:111:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", precision: 6, null: false
               ^^^^^^^^^^^^
db/schema.rb:114:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:114:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
                                                ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:114:81: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
                                                                                ^^^^^^^^^
db/schema.rb:115:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:115:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
                                                    ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:115:85: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
                                                                                    ^^^^^^^^^
db/seeds.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:1:1: C: Naming/FileName: The name of this source file (Integration_spec.rb) should use snake_case.
# frozen_string_literal: true
^
spec/feature/Integration_spec.rb:18:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/feature/Integration_spec.rb:19:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/feature/Integration_spec.rb:34:1: C: Metrics/BlockLength: Block has too many lines. [33/25]
RSpec.describe 'Creating a student', type: :feature do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:52:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
           ^^^^^
spec/feature/Integration_spec.rb:52:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "YES", :from => "student_recletter"
                  ^^^^^^^^
spec/feature/Integration_spec.rb:52:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
                           ^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:53:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
           ^^^^^^
spec/feature/Integration_spec.rb:53:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "Fall", :from => "student_semester"
                   ^^^^^^^^
spec/feature/Integration_spec.rb:53:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
                            ^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:83:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
           ^^^^^
spec/feature/Integration_spec.rb:83:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "YES", :from => "student_recletter"
                  ^^^^^^^^
spec/feature/Integration_spec.rb:83:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
                           ^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:84:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
           ^^^^^^
spec/feature/Integration_spec.rb:84:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "Fall", :from => "student_semester"
                   ^^^^^^^^
spec/feature/Integration_spec.rb:84:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
                            ^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:92:1: C: Metrics/BlockLength: Block has too many lines. [28/25]
RSpec.describe 'Updating a student', type: :feature do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:94:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                    ^^^
spec/feature/Integration_spec.rb:94:42: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                         ^^^^^
spec/feature/Integration_spec.rb:94:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                ^^^
spec/feature/Integration_spec.rb:94:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                ^^^
spec/feature/Integration_spec.rb:94:80: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                               ^^^
spec/feature/Integration_spec.rb:94:92: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                           ^^^
spec/feature/Integration_spec.rb:94:102: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                     ^^^
spec/feature/Integration_spec.rb:94:114: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                 ^^^
spec/feature/Integration_spec.rb:94:121: C: [Correctable] Layout/LineLength: Line is too long. [211/120]
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:94:131: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:94:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:94:166: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:94:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:94:193: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                ^^^
spec/feature/Integration_spec.rb:94:208: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                               ^^^
spec/feature/Integration_spec.rb:107:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
           ^^^^^
spec/feature/Integration_spec.rb:107:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "YES", :from => "student_recletter"
                  ^^^^^^^^
spec/feature/Integration_spec.rb:107:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
                           ^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:108:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
           ^^^^^^
spec/feature/Integration_spec.rb:108:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "Fall", :from => "student_semester"
                   ^^^^^^^^
spec/feature/Integration_spec.rb:108:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
                            ^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:127:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                    ^^^
spec/feature/Integration_spec.rb:127:42: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                         ^^^^^
spec/feature/Integration_spec.rb:127:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                ^^^
spec/feature/Integration_spec.rb:127:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                ^^^
spec/feature/Integration_spec.rb:127:80: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                               ^^^
spec/feature/Integration_spec.rb:127:92: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                           ^^^
spec/feature/Integration_spec.rb:127:102: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                     ^^^
spec/feature/Integration_spec.rb:127:114: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                 ^^^
spec/feature/Integration_spec.rb:127:121: C: [Correctable] Layout/LineLength: Line is too long. [211/120]
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:127:131: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:127:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:127:166: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:127:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:127:193: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                ^^^
spec/feature/Integration_spec.rb:127:208: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                               ^^^
spec/feature/Integration_spec.rb:140:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
           ^^^^^
spec/feature/Integration_spec.rb:140:19: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "YES", :from => "student_recletter"
                  ^^^^^^^^
spec/feature/Integration_spec.rb:140:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "YES", :from => "student_recletter"
                           ^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:141:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
           ^^^^^^
spec/feature/Integration_spec.rb:141:20: C: [Correctable] Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    select "Fall", :from => "student_semester"
                   ^^^^^^^^
spec/feature/Integration_spec.rb:141:29: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    select "Fall", :from => "student_semester"
                            ^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:151:5: W: Lint/UselessAssignment: Useless assignment to variable - student. Did you mean students_path?
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
    ^^^^^^^
spec/feature/Integration_spec.rb:151:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                    ^^^
spec/feature/Integration_spec.rb:151:42: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                         ^^^^^
spec/feature/Integration_spec.rb:151:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                ^^^
spec/feature/Integration_spec.rb:151:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                ^^^
spec/feature/Integration_spec.rb:151:80: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                               ^^^
spec/feature/Integration_spec.rb:151:92: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                           ^^^
spec/feature/Integration_spec.rb:151:102: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                     ^^^
spec/feature/Integration_spec.rb:151:114: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                 ^^^
spec/feature/Integration_spec.rb:151:121: C: [Correctable] Layout/LineLength: Line is too long. [211/120]
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:151:131: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:151:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:151:166: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:151:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:151:193: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                ^^^
spec/feature/Integration_spec.rb:151:208: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                               ^^^
spec/feature/Integration_spec.rb:157:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content("Students")
                                 ^^^^^^^^^^
spec/feature/Integration_spec.rb:163:1: C: [Correctable] Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    it "Uploads csv file" do
^^^^
spec/feature/Integration_spec.rb:163:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "Uploads csv file" do
       ^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:164:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                  ^^^^^^^^^^
spec/feature/Integration_spec.rb:164:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                               ^^^^^^
spec/feature/Integration_spec.rb:164:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                       ^^^^^^
spec/feature/Integration_spec.rb:164:104: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                       ^^^^^^^^^
spec/feature/Integration_spec.rb:164:119: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                                      ^^^^^^^
spec/feature/Integration_spec.rb:164:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                                        ^^^^^^
spec/feature/Integration_spec.rb:165:35: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                  ^^^^^^^^^^
spec/feature/Integration_spec.rb:165:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                               ^^^^^^
spec/feature/Integration_spec.rb:165:56: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                       ^^^^^^
spec/feature/Integration_spec.rb:165:104: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                       ^^^^^^^^^
spec/feature/Integration_spec.rb:165:119: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                                      ^^^^^^^
spec/feature/Integration_spec.rb:165:121: C: [Correctable] Layout/LineLength: Line is too long. [126/120]
      Student.import(file_fixture("test.csv"), "2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                                        ^^^^^^
spec/feature/Integration_spec.rb:167:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_content("Washington")
                                   ^^^^^^^^^^^^
spec/feature/Integration_spec.rb:169:36: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(page).to have_content("CS315")
                                   ^^^^^^^
spec/feature/Integration_spec.rb:175:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  before "Favorites student" do
         ^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:176:5: W: Lint/UselessAssignment: Useless assignment to variable - student. Did you mean students_path?
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
    ^^^^^^^
spec/feature/Integration_spec.rb:176:37: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                    ^^^
spec/feature/Integration_spec.rb:176:42: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                         ^^^^^
spec/feature/Integration_spec.rb:176:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                ^^^
spec/feature/Integration_spec.rb:176:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                ^^^
spec/feature/Integration_spec.rb:176:80: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                               ^^^
spec/feature/Integration_spec.rb:176:92: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                           ^^^
spec/feature/Integration_spec.rb:176:102: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                     ^^^
spec/feature/Integration_spec.rb:176:114: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                 ^^^
spec/feature/Integration_spec.rb:176:121: C: [Correctable] Layout/LineLength: Line is too long. [211/120]
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:176:131: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:176:150: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:176:166: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:176:182: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                     ^^^
spec/feature/Integration_spec.rb:176:193: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                ^^^
spec/feature/Integration_spec.rb:176:208: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    student = Student.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                               ^^^
spec/feature/Integration_spec.rb:188:1: C: Metrics/BlockLength: Block has too many lines. [49/25]
RSpec.describe 'Creating a favorite', type: :feature do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:224:31: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
  scenario 'invalid inputs' do 
                              ^
spec/feature/Integration_spec.rb:242:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/feature/Integration_spec.rb:244:1: C: Metrics/BlockLength: Block has too many lines. [45/25]
RSpec.describe 'Updating a favorite', type: :feature do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:246:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                      ^^^
spec/feature/Integration_spec.rb:246:44: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                           ^^^^^
spec/feature/Integration_spec.rb:246:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                  ^^^
spec/feature/Integration_spec.rb:246:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                  ^^^
spec/feature/Integration_spec.rb:246:82: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                 ^^^
spec/feature/Integration_spec.rb:246:94: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                             ^^^
spec/feature/Integration_spec.rb:246:104: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                       ^^^
spec/feature/Integration_spec.rb:246:116: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                   ^^^
spec/feature/Integration_spec.rb:246:121: C: [Correctable] Layout/LineLength: Line is too long. [213/120]
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:246:133: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                    ^^^
spec/feature/Integration_spec.rb:246:152: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:246:168: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:246:184: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:246:195: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:246:210: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                                 ^^^
spec/feature/Integration_spec.rb:276:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                      ^^^
spec/feature/Integration_spec.rb:276:44: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                           ^^^^^
spec/feature/Integration_spec.rb:276:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                  ^^^
spec/feature/Integration_spec.rb:276:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                  ^^^
spec/feature/Integration_spec.rb:276:82: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                 ^^^
spec/feature/Integration_spec.rb:276:94: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                             ^^^
spec/feature/Integration_spec.rb:276:104: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                       ^^^
spec/feature/Integration_spec.rb:276:116: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                   ^^^
spec/feature/Integration_spec.rb:276:121: C: [Correctable] Layout/LineLength: Line is too long. [213/120]
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:276:133: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                    ^^^
spec/feature/Integration_spec.rb:276:152: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:276:168: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:276:184: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:276:195: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:276:210: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                                 ^^^
spec/feature/Integration_spec.rb:277:39: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
    visit edit_favorite_path(favorite) 
                                      ^
spec/feature/Integration_spec.rb:297:5: W: Lint/UselessAssignment: Useless assignment to variable - favorite. Did you mean favorites_path?
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
    ^^^^^^^^
spec/feature/Integration_spec.rb:297:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                      ^^^
spec/feature/Integration_spec.rb:297:44: W: Lint/DuplicateHashKey: Duplicated key in hash literal.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                           ^^^^^
spec/feature/Integration_spec.rb:297:51: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                  ^^^
spec/feature/Integration_spec.rb:297:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                  ^^^
spec/feature/Integration_spec.rb:297:82: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                 ^^^
spec/feature/Integration_spec.rb:297:94: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                             ^^^
spec/feature/Integration_spec.rb:297:104: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                       ^^^
spec/feature/Integration_spec.rb:297:116: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                   ^^^
spec/feature/Integration_spec.rb:297:121: C: [Correctable] Layout/LineLength: Line is too long. [213/120]
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:297:133: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                    ^^^
spec/feature/Integration_spec.rb:297:152: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:297:168: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:297:184: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                       ^^^
spec/feature/Integration_spec.rb:297:195: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                  ^^^
spec/feature/Integration_spec.rb:297:210: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    favorite = Favorite.create(email: "m", email: "m", firstname: "m", lastname: "m", notes: "m", uin: "m", major: "m", finalgrade: "m", updatedgrade: "m", classname: "m", recletter: "m", year: "m", semester: "m")
                                                                                                                                                                                                                 ^^^
spec/feature/Integration_spec.rb:303:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_content("successfully")
                                 ^^^^^^^^^^^^^^
spec/feature/Integration_spec.rb:310:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    course = Course.create(classname: "m", year: "m", semester: "m")
                                      ^^^
spec/feature/Integration_spec.rb:310:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    course = Course.create(classname: "m", year: "m", semester: "m")
                                                 ^^^
spec/feature/Integration_spec.rb:310:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    course = Course.create(classname: "m", year: "m", semester: "m")
                                                                ^^^
spec/feature/Integration_spec.rb:326:39: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    course = Course.create(classname: "m", year: "m", semester: "m")
                                      ^^^
spec/feature/Integration_spec.rb:326:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    course = Course.create(classname: "m", year: "m", semester: "m")
                                                 ^^^
spec/feature/Integration_spec.rb:326:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    course = Course.create(classname: "m", year: "m", semester: "m")
                                                                ^^^
spec/helpers/courses_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/courses_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/favorites_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/favorites_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/helpers/images_helper_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/helpers/images_helper_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/course_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/course_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/favorite_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/favorite_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/models/image_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/models/image_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/rails_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/courses_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/courses", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/courses", type: :request do
               ^^^^^^^^^^
spec/requests/courses_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/courses_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/courses_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/courses_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/courses_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/courses_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/courses_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/courses_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Course" do
         ^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/courses_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created course" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Course" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/courses_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/courses_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested course" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the course" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested course" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/courses_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/courses_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the courses list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/requests/favorites_spec.rb:15:1: C: Metrics/BlockLength: Block has too many lines. [96/25]
RSpec.describe "/favorites", type: :request do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:15:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "/favorites", type: :request do
               ^^^^^^^^^^^^
spec/requests/favorites_spec.rb:16:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/requests/favorites_spec.rb:20:26: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:valid_attributes) {
                         ^
spec/requests/favorites_spec.rb:21:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes valid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:24:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
  let(:invalid_attributes) {
                           ^
spec/requests/favorites_spec.rb:25:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    skip("Add a hash of attributes invalid for your model")
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:28:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /index" do
           ^^^^^^^^^^^^
spec/requests/favorites_spec.rb:29:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:36:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /show" do
           ^^^^^^^^^^^
spec/requests/favorites_spec.rb:37:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:44:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /new" do
           ^^^^^^^^^^
spec/requests/favorites_spec.rb:45:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:51:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "GET /edit" do
           ^^^^^^^^^^^
spec/requests/favorites_spec.rb:52:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "renders a successful response" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:59:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "POST /create" do
           ^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:60:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:61:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "creates a new Favorite" do
         ^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:62:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/favorites_spec.rb:67:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the created favorite" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:73:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:74:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "does not create a new Favorite" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:75:16: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/favorites_spec.rb:87:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "PATCH /update" do
           ^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:88:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with valid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:89:28: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      let(:new_attributes) {
                           ^
spec/requests/favorites_spec.rb:90:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add a hash of attributes valid for your model")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:93:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "updates the requested favorite" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:97:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        skip("Add assertions for updated state")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:100:10: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      it "redirects to the favorite" do
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:108:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    context "with invalid parameters" do
            ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:117:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "DELETE /destroy" do
           ^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:118:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "destroys the requested favorite" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/favorites_spec.rb:120:14: C: [Correctable] Style/BlockDelimiters: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/favorites_spec.rb:125:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "redirects to the favorites list" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/courses_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe CoursesController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/courses_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses").to route_to("courses#index")
                  ^^^^^^^^^^
spec/routing/courses_routing_spec.rb:6:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses").to route_to("courses#index")
                                          ^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/new").to route_to("courses#new")
                  ^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:10:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/new").to route_to("courses#new")
                                              ^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/1").to route_to("courses#show", id: "1")
                  ^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:14:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/1").to route_to("courses#show", id: "1")
                                            ^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:14:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/1").to route_to("courses#show", id: "1")
                                                                ^^^
spec/routing/courses_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/1/edit").to route_to("courses#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:18:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/1/edit").to route_to("courses#edit", id: "1")
                                                 ^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:18:70: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/courses/1/edit").to route_to("courses#edit", id: "1")
                                                                     ^^^
spec/routing/courses_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/courses_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/courses").to route_to("courses#create")
                   ^^^^^^^^^^
spec/routing/courses_routing_spec.rb:23:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/courses").to route_to("courses#create")
                                           ^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/courses/1").to route_to("courses#update", id: "1")
                  ^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:27:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/courses/1").to route_to("courses#update", id: "1")
                                            ^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:27:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/courses/1").to route_to("courses#update", id: "1")
                                                                  ^^^
spec/routing/courses_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/courses/1").to route_to("courses#update", id: "1")
                    ^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:31:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/courses/1").to route_to("courses#update", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:31:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/courses/1").to route_to("courses#update", id: "1")
                                                                    ^^^
spec/routing/courses_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/courses/1").to route_to("courses#destroy", id: "1")
                     ^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:35:48: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/courses/1").to route_to("courses#destroy", id: "1")
                                               ^^^^^^^^^^^^^^^^^
spec/routing/courses_routing_spec.rb:35:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/courses/1").to route_to("courses#destroy", id: "1")
                                                                      ^^^
spec/routing/favorites_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/favorites_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe FavoritesController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/favorites_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites").to route_to("favorites#index")
                  ^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:6:45: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites").to route_to("favorites#index")
                                            ^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/new").to route_to("favorites#new")
                  ^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:10:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/new").to route_to("favorites#new")
                                                ^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/1").to route_to("favorites#show", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:14:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/1").to route_to("favorites#show", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:14:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/1").to route_to("favorites#show", id: "1")
                                                                    ^^^
spec/routing/favorites_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/1/edit").to route_to("favorites#edit", id: "1")
                  ^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:18:52: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/1/edit").to route_to("favorites#edit", id: "1")
                                                   ^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:18:74: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/favorites/1/edit").to route_to("favorites#edit", id: "1")
                                                                         ^^^
spec/routing/favorites_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/favorites_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/favorites").to route_to("favorites#create")
                   ^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:23:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/favorites").to route_to("favorites#create")
                                             ^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/favorites/1").to route_to("favorites#update", id: "1")
                  ^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:27:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/favorites/1").to route_to("favorites#update", id: "1")
                                              ^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:27:71: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/favorites/1").to route_to("favorites#update", id: "1")
                                                                      ^^^
spec/routing/favorites_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/favorites/1").to route_to("favorites#update", id: "1")
                    ^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:31:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/favorites/1").to route_to("favorites#update", id: "1")
                                                ^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:31:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/favorites/1").to route_to("favorites#update", id: "1")
                                                                        ^^^
spec/routing/favorites_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/favorites/1").to route_to("favorites#destroy", id: "1")
                     ^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:35:50: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/favorites/1").to route_to("favorites#destroy", id: "1")
                                                 ^^^^^^^^^^^^^^^^^^^
spec/routing/favorites_routing_spec.rb:35:75: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/favorites/1").to route_to("favorites#destroy", id: "1")
                                                                          ^^^
spec/routing/images_routing_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require "rails_helper" ...
^^^^^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require "rails_helper"
^
spec/routing/images_routing_spec.rb:1:9: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
require "rails_helper"
        ^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [26/25]
RSpec.describe ImagesController, type: :routing do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:4:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  describe "routing" do
           ^^^^^^^^^
spec/routing/images_routing_spec.rb:5:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #index" do
       ^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:6:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images").to route_to("images#index")
                  ^^^^^^^^^
spec/routing/images_routing_spec.rb:6:42: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images").to route_to("images#index")
                                         ^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:9:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #new" do
       ^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:10:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/new").to route_to("images#new")
                  ^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:10:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/new").to route_to("images#new")
                                             ^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:13:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #show" do
       ^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/1").to route_to("images#show", id: "1")
                  ^^^^^^^^^^^
spec/routing/images_routing_spec.rb:14:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/1").to route_to("images#show", id: "1")
                                           ^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:14:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/1").to route_to("images#show", id: "1")
                                                              ^^^
spec/routing/images_routing_spec.rb:17:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #edit" do
       ^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:18:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/1/edit").to route_to("images#edit", id: "1")
                  ^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:18:49: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/1/edit").to route_to("images#edit", id: "1")
                                                ^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:18:68: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(get: "/images/1/edit").to route_to("images#edit", id: "1")
                                                                   ^^^
spec/routing/images_routing_spec.rb:21:1: C: [Correctable] Layout/EmptyLines: Extra blank line detected.
spec/routing/images_routing_spec.rb:22:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #create" do
       ^^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:23:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/images").to route_to("images#create")
                   ^^^^^^^^^
spec/routing/images_routing_spec.rb:23:43: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(post: "/images").to route_to("images#create")
                                          ^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:26:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PUT" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:27:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/images/1").to route_to("images#update", id: "1")
                  ^^^^^^^^^^^
spec/routing/images_routing_spec.rb:27:44: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/images/1").to route_to("images#update", id: "1")
                                           ^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:27:65: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(put: "/images/1").to route_to("images#update", id: "1")
                                                                ^^^
spec/routing/images_routing_spec.rb:30:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #update via PATCH" do
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:31:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/images/1").to route_to("images#update", id: "1")
                    ^^^^^^^^^^^
spec/routing/images_routing_spec.rb:31:46: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/images/1").to route_to("images#update", id: "1")
                                             ^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:31:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(patch: "/images/1").to route_to("images#update", id: "1")
                                                                  ^^^
spec/routing/images_routing_spec.rb:34:8: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    it "routes to #destroy" do
       ^^^^^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:35:22: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/images/1").to route_to("images#destroy", id: "1")
                     ^^^^^^^^^^^
spec/routing/images_routing_spec.rb:35:47: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/images/1").to route_to("images#destroy", id: "1")
                                              ^^^^^^^^^^^^^^^^
spec/routing/images_routing_spec.rb:35:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      expect(delete: "/images/1").to route_to("images#destroy", id: "1")
                                                                    ^^^
spec/spec_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:22:1: C: Metrics/BlockLength: Block has too many lines. [38/25]
RSpec.describe Student, type: :model do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:26:75: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
                        classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                                                                          ^
spec/unit/unit_spec.rb:50:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.email = "4".to_i
                    ^^^
spec/unit/unit_spec.rb:51:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.firstname = "4".to_i
                        ^^^
spec/unit/unit_spec.rb:52:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.lastname = "4".to_i
                       ^^^
spec/unit/unit_spec.rb:53:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.notes = "4".to_i
                    ^^^
spec/unit/unit_spec.rb:54:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.uin = "this should be a number"
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:55:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.major = "4".to_i
                    ^^^
spec/unit/unit_spec.rb:56:26: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.finalgrade = "this should be a number"
                         ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:57:28: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.updatedgrade = "this should be a number"
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:58:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.classname = "4".to_i
                        ^^^
spec/unit/unit_spec.rb:59:25: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.recletter = "4".to_i
                        ^^^
spec/unit/unit_spec.rb:60:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.year = "this should be a number"
                   ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:61:24: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    subject.semester = "4".to_i
                       ^^^
spec/unit/unit_spec.rb:71:75: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
                        classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                                                                          ^
spec/unit/unit_spec.rb:77:30: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                             notes: 'kinda a scumbag', uin: '2', major: 'csce', finalgrade: 'A', updatedgrade: 'C',
                             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:77:30: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                             notes: 'kinda a scumbag', uin: '2', major: 'csce', finalgrade: 'A', updatedgrade: 'C',
                             ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:78:30: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                             classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                             ^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:78:30: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                             classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                             ^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:78:80: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
                             classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                                                                               ^
spec/unit/unit_spec.rb:87:72: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
                     classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                                                                       ^
spec/unit/unit_spec.rb:97:27: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                          notes: 'very cool guy', uin: '100000', major: 'cs', finalgrade: 'A', updatedgrade: 'C',
                          ^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:97:27: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          notes: 'very cool guy', uin: '100000', major: 'cs', finalgrade: 'A', updatedgrade: 'C',
                          ^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:98:27: C: [Correctable] Layout/ArgumentAlignment: Align the arguments of a method call if they span more than one line.
                          classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                          ^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:98:27: C: [Correctable] Layout/HashAlignment: Align the keys of a hash literal if they span more than one line.
                          classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                          ^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:98:77: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
                          classname: 'cs315', recletter: 'yes', year: '2021' , semester: 'Fall')
                                                                            ^
spec/unit/unit_spec.rb:100:28: C: [Correctable] Style/MethodCallWithoutArgsParentheses: Do not use parentheses for method calls with no arguments.
    described_class.destroy()
                           ^^
spec/unit/unit_spec.rb:101:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:109:41: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                        ^^^^^^^^^^
spec/unit/unit_spec.rb:109:52: C: [Correctable] Layout/SpaceAfterComma: Space missing after comma.
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                   ^
spec/unit/unit_spec.rb:109:53: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                    ^^^^^^
spec/unit/unit_spec.rb:109:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                            ^^^^^^
spec/unit/unit_spec.rb:109:109: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                            ^^^^^^^^^
spec/unit/unit_spec.rb:109:121: C: [Correctable] Layout/LineLength: Line is too long. [131/120]
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                                        ^^^^^^^^^^^
spec/unit/unit_spec.rb:109:124: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    described_class.import(file_fixture("test.csv"),"2021", "Fall", [File.open(Rails.root.join(file_fixture("pfp.jpg")))], "CS315")
                                                                                                                           ^^^^^^^
spec/unit/unit_spec.rb:111:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:112:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    it 'imports properly' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:120:90: C: [Correctable] Layout/SpaceBeforeComma: Space found before comma.
    described_class.favor('mihiranpandey@gmail.com', 'mihiran', 'pandey', 'is cool', 'cs' , '0000001', 'A', 'B', 'cs315', 'YES', 'Fall', '2021')
                                                                                         ^
spec/unit/unit_spec.rb:120:121: C: [Correctable] Layout/LineLength: Line is too long. [144/120]
    described_class.favor('mihiranpandey@gmail.com', 'mihiran', 'pandey', 'is cool', 'cs' , '0000001', 'A', 'B', 'cs315', 'YES', 'Fall', '2021')
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:122:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:133:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:134:5: C: [Correctable] Layout/IndentationConsistency: Inconsistent indentation detected.
    it 'is valid with valid attributes' do ...
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:137:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/unit/unit_spec.rb:154:121: C: Layout/LineLength: Line is too long. [255/120]
#     described_class.new(email: 'mihiranpandey@gmail.com', firstname: 'mihiran', lastname: 'pandey', notes: 'is cool', major: 'cs' , uin: '0000001', finalgrade: 'A', updatedgrade: 'B', classname: 'cs315', recletter: 'YES', semester: 'Fall', year: '2021')
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/unit/unit_spec.rb:156:1: C: [Correctable] Layout/TrailingWhitespace: Trailing whitespace detected.
spec/views/courses/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/courses/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "courses/edit", type: :view do
               ^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Course.create!(.
      classname: "MyString", ...
      ^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:6:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classname: "MyString",
                 ^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:7:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      semester: "MyString",
                ^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:8:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      year: "MyString"
            ^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit course form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:15:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", course_path(@course), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:15:69: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", course_path(@course), "post" do
                                                                    ^^^^^^
spec/views/courses/edit.html.erb_spec.rb:16:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/courses/edit.html.erb_spec.rb:17:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[classname]"
                    ^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:17:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[classname]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:19:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[semester]"
                    ^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:19:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[semester]"
                                     ^^^^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[year]"
                    ^^^^^^^^^^^^^^^
spec/views/courses/edit.html.erb_spec.rb:21:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[year]"
                                     ^^^^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/courses/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "courses/index", type: :view do
               ^^^^^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Course.create!( ...
      ^^^^^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:7:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        classname: "Classname",
                   ^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:8:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        semester: "Semester",
                  ^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:9:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        year: "Year"
              ^^^^^^
spec/views/courses/index.html.erb_spec.rb:12:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        classname: "Classname",
                   ^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:13:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        semester: "Semester",
                  ^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:14:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        year: "Year"
              ^^^^^^
spec/views/courses/index.html.erb_spec.rb:16:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/courses/index.html.erb_spec.rb:19:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of courses" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:21:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Classname".to_s, count: 2
                  ^^^^^^^
spec/views/courses/index.html.erb_spec.rb:21:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Classname".to_s, count: 2
                                 ^^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:22:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Semester".to_s, count: 2
                  ^^^^^^^
spec/views/courses/index.html.erb_spec.rb:22:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Semester".to_s, count: 2
                                 ^^^^^^^^^^
spec/views/courses/index.html.erb_spec.rb:23:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Year".to_s, count: 2
                  ^^^^^^^
spec/views/courses/index.html.erb_spec.rb:23:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Year".to_s, count: 2
                                 ^^^^^^
spec/views/courses/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/courses/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "courses/new", type: :view do
               ^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Course.new(.
      classname: "MyString", ...
      ^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:6:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classname: "MyString",
                 ^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:7:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      semester: "MyString",
                ^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:8:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      year: "MyString"
            ^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new course form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:15:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", courses_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:15:61: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", courses_path, "post" do
                                                            ^^^^^^
spec/views/courses/new.html.erb_spec.rb:16:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/courses/new.html.erb_spec.rb:17:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[classname]"
                    ^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:17:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[classname]"
                                     ^^^^^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:19:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[semester]"
                    ^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:19:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[semester]"
                                     ^^^^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:21:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[year]"
                    ^^^^^^^^^^^^^^^
spec/views/courses/new.html.erb_spec.rb:21:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "course[year]"
                                     ^^^^^^^^^^^^^^
spec/views/courses/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/courses/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "courses/show", type: :view do
               ^^^^^^^^^^^^^^
spec/views/courses/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Course.create!(.
      classname: "Classname", ...
      ^^^^^^^^^^^^^^^^^^^^^^^
spec/views/courses/show.html.erb_spec.rb:6:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classname: "Classname",
                 ^^^^^^^^^^^
spec/views/courses/show.html.erb_spec.rb:7:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      semester: "Semester",
                ^^^^^^^^^^
spec/views/courses/show.html.erb_spec.rb:8:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      year: "Year"
            ^^^^^^
spec/views/courses/show.html.erb_spec.rb:12:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/favorites/edit.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [33/25]
RSpec.describe "favorites/edit", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "favorites/edit", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Favorite.create!(.
      lastname: "MyString", ...
      ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:6:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      lastname: "MyString",
                ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      firstname: "MyString",
                 ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:8:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      uin: "MyString",
           ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "MyString",
             ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:10:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classname: "MyString",
                 ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      notes: "MyString",
             ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:12:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      major: "MyString",
             ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:13:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      finalgrade: "MyString",
                  ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:14:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      updatedgrade: "MyString",
                    ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:15:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      recletter: "MyString",
                 ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:16:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      semester: "MyString",
                ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      year: "MyString"
            ^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:21:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit favorite form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:24:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", favorite_path(@favorite), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:24:73: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", favorite_path(@favorite), "post" do
                                                                        ^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:25:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/favorites/edit.html.erb_spec.rb:26:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[lastname]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:26:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[lastname]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:28:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[firstname]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:28:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[firstname]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:30:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[uin]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:30:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[uin]"
                                     ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:32:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[email]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:32:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[email]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:34:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[classname]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:34:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[classname]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:36:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[notes]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:36:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[notes]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:38:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[major]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:38:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[major]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:40:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[finalgrade]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:40:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[finalgrade]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:42:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[updatedgrade]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:42:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[updatedgrade]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:44:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[recletter]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:44:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[recletter]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:46:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[semester]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:46:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[semester]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:48:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[year]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/edit.html.erb_spec.rb:48:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[year]"
                                     ^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/favorites/index.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [47/25]
RSpec.describe "favorites/index", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "favorites/index", type: :view do
               ^^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:4:3: C: Metrics/BlockLength: Block has too many lines. [30/25]
  before(:each) do ...
  ^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Favorite.create!( ...
      ^^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:7:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        lastname: "Lastname",
                  ^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:8:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        firstname: "Firstname",
                   ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uin: "Uin",
             ^^^^^
spec/views/favorites/index.html.erb_spec.rb:10:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        email: "Email",
               ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:11:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        classname: "Classname",
                   ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:12:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        notes: "Notes",
               ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:13:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        major: "Major",
               ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:14:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        finalgrade: "Finalgrade",
                    ^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:15:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        updatedgrade: "Updatedgrade",
                      ^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:16:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        recletter: "Recletter",
                   ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:17:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        semester: "Semester",
                  ^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:18:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        year: "Year"
              ^^^^^^
spec/views/favorites/index.html.erb_spec.rb:21:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        lastname: "Lastname",
                  ^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:22:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        firstname: "Firstname",
                   ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:23:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uin: "Uin",
             ^^^^^
spec/views/favorites/index.html.erb_spec.rb:24:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        email: "Email",
               ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:25:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        classname: "Classname",
                   ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:26:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        notes: "Notes",
               ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:27:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        major: "Major",
               ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:28:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        finalgrade: "Finalgrade",
                    ^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:29:23: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        updatedgrade: "Updatedgrade",
                      ^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:30:20: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        recletter: "Recletter",
                   ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:31:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        semester: "Semester",
                  ^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:32:15: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        year: "Year"
              ^^^^^^
spec/views/favorites/index.html.erb_spec.rb:34:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/favorites/index.html.erb_spec.rb:37:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of favorites" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:39:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Lastname".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:39:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Lastname".to_s, count: 2
                                 ^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:40:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Firstname".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:40:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Firstname".to_s, count: 2
                                 ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:41:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Uin".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:41:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Uin".to_s, count: 2
                                 ^^^^^
spec/views/favorites/index.html.erb_spec.rb:42:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Email".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:42:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Email".to_s, count: 2
                                 ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:43:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Classname".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:43:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Classname".to_s, count: 2
                                 ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:44:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Notes".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:44:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Notes".to_s, count: 2
                                 ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:45:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Major".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:45:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Major".to_s, count: 2
                                 ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:46:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Finalgrade".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:46:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Finalgrade".to_s, count: 2
                                 ^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:47:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Updatedgrade".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:47:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Updatedgrade".to_s, count: 2
                                 ^^^^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:48:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Recletter".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:48:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Recletter".to_s, count: 2
                                 ^^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:49:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Semester".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:49:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Semester".to_s, count: 2
                                 ^^^^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:50:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Year".to_s, count: 2
                  ^^^^^^^
spec/views/favorites/index.html.erb_spec.rb:50:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Year".to_s, count: 2
                                 ^^^^^^
spec/views/favorites/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/favorites/new.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [33/25]
RSpec.describe "favorites/new", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "favorites/new", type: :view do
               ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Favorite.new(.
      lastname: "MyString", ...
      ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:6:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      lastname: "MyString",
                ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      firstname: "MyString",
                 ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:8:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      uin: "MyString",
           ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "MyString",
             ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:10:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classname: "MyString",
                 ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      notes: "MyString",
             ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:12:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      major: "MyString",
             ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:13:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      finalgrade: "MyString",
                  ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:14:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      updatedgrade: "MyString",
                    ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:15:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      recletter: "MyString",
                 ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:16:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      semester: "MyString",
                ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      year: "MyString"
            ^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:21:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new favorite form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:24:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", favorites_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:24:63: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", favorites_path, "post" do
                                                              ^^^^^^
spec/views/favorites/new.html.erb_spec.rb:25:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/favorites/new.html.erb_spec.rb:26:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[lastname]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:26:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[lastname]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:28:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[firstname]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:28:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[firstname]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:30:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[uin]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:30:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[uin]"
                                     ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:32:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[email]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:32:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[email]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:34:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[classname]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:34:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[classname]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:36:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[notes]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:36:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[notes]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:38:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[major]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:38:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[major]"
                                     ^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:40:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[finalgrade]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:40:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[finalgrade]"
                                     ^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:42:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[updatedgrade]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:42:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[updatedgrade]"
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:44:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[recletter]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:44:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[recletter]"
                                     ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:46:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[semester]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:46:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[semester]"
                                     ^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:48:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[year]"
                    ^^^^^^^^^^^^^^^
spec/views/favorites/new.html.erb_spec.rb:48:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "favorite[year]"
                                     ^^^^^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/favorites/show.html.erb_spec.rb:3:1: C: Metrics/BlockLength: Block has too many lines. [31/25]
RSpec.describe "favorites/show", type: :view do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "favorites/show", type: :view do
               ^^^^^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Favorite.create!(.
      lastname: "Lastname", ...
      ^^^^^^^^^^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:6:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      lastname: "Lastname",
                ^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:7:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      firstname: "Firstname",
                 ^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:8:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      uin: "Uin",
           ^^^^^
spec/views/favorites/show.html.erb_spec.rb:9:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      email: "Email",
             ^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:10:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      classname: "Classname",
                 ^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      notes: "Notes",
             ^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:12:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      major: "Major",
             ^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:13:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      finalgrade: "Finalgrade",
                  ^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:14:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      updatedgrade: "Updatedgrade",
                    ^^^^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:15:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      recletter: "Recletter",
                 ^^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:16:17: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      semester: "Semester",
                ^^^^^^^^^^
spec/views/favorites/show.html.erb_spec.rb:17:13: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      year: "Year"
            ^^^^^^
spec/views/favorites/show.html.erb_spec.rb:21:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/images/edit.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "images/edit", type: :view do
               ^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Image.create!(.
      uin: "MyString", ...
      ^^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:6:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      uin: "MyString",
           ^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      photo: "MyString"
             ^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders the edit image form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", image_path(@image), "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:14:67: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", image_path(@image), "post" do
                                                                  ^^^^^^
spec/views/images/edit.html.erb_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/images/edit.html.erb_spec.rb:16:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[uin]"
                    ^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:16:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[uin]"
                                     ^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[photo]"
                    ^^^^^^^^^^^^^^^
spec/views/images/edit.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[photo]"
                                     ^^^^^^^^^^^^^^
spec/views/images/index.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/index.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/images/index.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "images/index", type: :view do
               ^^^^^^^^^^^^^^
spec/views/images/index.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArrayElementIndentation: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
      Image.create!( ...
      ^^^^^^^^^^^^^^
spec/views/images/index.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uin: "Uin",
             ^^^^^
spec/views/images/index.html.erb_spec.rb:8:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        photo: "Photo"
               ^^^^^^^
spec/views/images/index.html.erb_spec.rb:11:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        uin: "Uin",
             ^^^^^
spec/views/images/index.html.erb_spec.rb:12:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        photo: "Photo"
               ^^^^^^^
spec/views/images/index.html.erb_spec.rb:14:5: C: [Correctable] Layout/FirstArrayElementIndentation: Indent the right bracket the same as the first position after the preceding left parenthesis.
    ])
    ^
spec/views/images/index.html.erb_spec.rb:17:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders a list of images" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/index.html.erb_spec.rb:19:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Uin".to_s, count: 2
                  ^^^^^^^
spec/views/images/index.html.erb_spec.rb:19:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Uin".to_s, count: 2
                                 ^^^^^
spec/views/images/index.html.erb_spec.rb:20:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Photo".to_s, count: 2
                  ^^^^^^^
spec/views/images/index.html.erb_spec.rb:20:34: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "tr>td", text: "Photo".to_s, count: 2
                                 ^^^^^^^
spec/views/images/new.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/images/new.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "images/new", type: :view do
               ^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Image.new(.
      uin: "MyString", ...
      ^^^^^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:6:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      uin: "MyString",
           ^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      photo: "MyString"
             ^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders new image form" do
     ^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:14:19: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", images_path, "post" do
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:14:60: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    assert_select "form[action=?][method=?]", images_path, "post" do
                                                           ^^^^^^
spec/views/images/new.html.erb_spec.rb:15:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
spec/views/images/new.html.erb_spec.rb:16:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[uin]"
                    ^^^^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:16:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[uin]"
                                     ^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:18:21: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[photo]"
                    ^^^^^^^^^^^^^^^
spec/views/images/new.html.erb_spec.rb:18:38: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      assert_select "input[name=?]", "image[photo]"
                                     ^^^^^^^^^^^^^^
spec/views/images/show.html.erb_spec.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
require 'rails_helper' ...
^^^^^^^^^^^^^^^^^^^^^^
spec/views/images/show.html.erb_spec.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
require 'rails_helper'
^
spec/views/images/show.html.erb_spec.rb:3:16: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
RSpec.describe "images/show", type: :view do
               ^^^^^^^^^^^^^
spec/views/images/show.html.erb_spec.rb:6:7: C: [Correctable] Layout/FirstArgumentIndentation: Indent the first argument one step more than Image.create!(.
      uin: "Uin", ...
      ^^^^^^^^^^^
spec/views/images/show.html.erb_spec.rb:6:12: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      uin: "Uin",
           ^^^^^
spec/views/images/show.html.erb_spec.rb:7:14: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      photo: "Photo"
             ^^^^^^^
spec/views/images/show.html.erb_spec.rb:11:6: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  it "renders attributes in <p>" do
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/application_system_test_case.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/channels/application_cable/connection_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/students_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/students_controller_test.rb:24:121: C: Layout/LineLength: Line is too long. [165/120]
                                lastname: @student.lastname, major: @student.major, notes: @student.notes, uin: @student.uin, updatedgrade: @student.updatedgrade } }
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/students_controller_test.rb:43:121: C: Layout/LineLength: Line is too long. [164/120]
                               lastname: @student.lastname, major: @student.major, notes: @student.notes, uin: @student.uin, updatedgrade: @student.updatedgrade } }
                                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/users_controller_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/models/admin_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/models/student_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/models/user_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/students_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/system/users_test.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:1:1: C: Layout/EndOfLine: Carriage return character detected.
# frozen_string_literal: true ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

115 files inspected, 1068 offenses detected, 866 offenses auto-correctable
